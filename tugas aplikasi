#include <iostream>
#include <windows.h>
#include <MMSystem.h>
#include <stdio.h>
#ifdef __APPLE__
#include <GLUT/glut.h>
#else
#include <GL/glut.h>
#include <GL/glu.h>
#endif

#include <stdlib.h>
using namespace std;
//untuk pergerakan dan edit warna objek
float posY = 0.0, posX = 0.0,color1 = 0.1,color2 = 0.5,color3 = 0.1,nilai_awal = 1.0,kelipatan = 2.0,kecepatan = 0.0;
//untuk interaksi objek utam
float x2up = 2.5,x2down =2.5;
//ubah warna
float a= 1.0,b=1.0,c=0.5;
//untuk interaksi objek target
float t=9.5;
// reaksi objek
float down8=0.0,down1=0.0,down2=0.0,down3=0.0,down4=0.0,down5=0.0,down6=0.0,down7=0.0;
//
void display(){

glClear (GL_COLOR_BUFFER_BIT);
    // objek reaksi 1
    glColor3f(1.0,1.0,0.0);
    glBegin(GL_POLYGON);
        glVertex2f(-14.0,29.0+down1);
        glVertex2f(-14.0,26.5+down1);
        glVertex2f(-11.0,26.5+down1);
        glVertex2f(-11.0,29.0+down1);
    glEnd();

    glBegin(GL_POLYGON);
        glVertex2f(-10.0,29.0+down2);
        glVertex2f(-10.0,26.5+down2);
        glVertex2f(-7.0,26.5+down2);
        glVertex2f(-7.0,29.0+down2);
    glEnd();

    glBegin(GL_POLYGON);
        glVertex2f(-6.0,29.0+down3);
        glVertex2f(-6.0,26.5+down3);
        glVertex2f(-3.0,26.5+down4);
        glVertex2f(-3.0,29.0+down4);
    glEnd();

    glBegin(GL_POLYGON);
        glVertex2f(-2.0,29.0+down5);
        glVertex2f(-2.0,26.5+down5);
        glVertex2f(1.0,26.5+down5);
        glVertex2f(1.0,29.0+down5);
    glEnd();

    glBegin(GL_POLYGON);
        glVertex2f(2.0,29.0+down6);
        glVertex2f(2.0,26.5+down6);
        glVertex2f(5.0,26.5+down6);
        glVertex2f(5.0,29.0+down6);
    glEnd();

    glBegin(GL_POLYGON);
        glVertex2f(6.0,29.0+down7);
        glVertex2f(6.0,26.5+down7);
        glVertex2f(9.0,26.5+down7);
        glVertex2f(9.0,29.0+down7);
    glEnd();

    glBegin(GL_POLYGON);
        glVertex2f(10.0,29.0+down8);
        glVertex2f(10.0,26.5+down8);
        glVertex2f(13.0,26.5+down8);
        glVertex2f(13.0,29.0+down8);
    glEnd();

    // objek reaksi 1
    // objek target
    glColor3f(1.0,0.0,c);
    glBegin(GL_POLYGON);
        glVertex2f(9.5,12.0);
        glVertex2f(9.5,9.5);
        glVertex2f(12.0,9.5);
        glVertex2f(12.0,12.0);
    glEnd();
    glColor3f(1.0,0.0,c);
    glBegin(GL_POLYGON);
        glVertex2f(-9.5,12.0);
        glVertex2f(-9.5,9.5);
        glVertex2f(-12.0,9.5);
        glVertex2f(-12.0,12.0);
    glEnd();
    glColor3f(1.0,0.0,c);
    glBegin(GL_POLYGON);
        glVertex2f(-9.5,-12.0);
        glVertex2f(-9.5,-9.5);
        glVertex2f(-12.0,-9.5);
        glVertex2f(-12.0,-12.0);
    glEnd();
    glColor3f(1.0,0.0,c);
    glBegin(GL_POLYGON);
        glVertex2f(9.5,-12.0);
        glVertex2f(9.5,-9.5);
        glVertex2f(12.0,-9.5);
        glVertex2f(12.0,-12.0);
    glEnd();
    //objek target
    //objek utama
    glColor3f(1.0,0.0,0.0);
    //simbol tambahan
    glLineWidth(5);
     glBegin(GL_LINE_LOOP);
        glVertex2f(-1.5+posX,0.0+posY);
        glVertex2f(0.0+posX,-1.5+posY);
        glVertex2f(1.5+posX,0.0+posY);
        glVertex2f(0.0+posX,1.5+posY);
    glEnd();
    glBegin(GL_LINE_LOOP);
        glVertex2f(-2.5+posX,0.0+posY);
        glVertex2f(0.0+posX,-2.5+posY);
        glVertex2f(2.5+posX,0.0+posY);
        glVertex2f(0.0+posX,2.5+posY);
    glEnd();
     glBegin(GL_LINE_LOOP);
        glVertex2f(-3.5+posX,0.0+posY);
        glVertex2f(0.0+posX,-3.5+posY);
        glVertex2f(3.5+posX,0.0+posY);
        glVertex2f(0.0+posX,3.5+posY);
    glEnd();
     glBegin(GL_LINE_LOOP);
        glVertex2f(-4.5+posX,0.0+posY);
        glVertex2f(0.0+posX,-4.5+posY);
        glVertex2f(4.5+posX,0.0+posY);
        glVertex2f(0.0+posX,4.5+posY);
    glEnd();
    //simbol tambahan
    //simbol plus
    glColor3f(color1,0.0,color3);
    glBegin(GL_POLYGON);
        glVertex2f(-4.0+posX,0.5+posY);
        glVertex2f(-5.0+posX,0.0+posY);
        glVertex2f(-4.0+posX,-0.5+posY);
        glVertex2f(4.0+posX,-0.5+posY);
        glVertex2f(5.0+posX,0.0+posY);
        glVertex2f(4.0+posX,0.5+posY);
    glEnd();
    glBegin(GL_POLYGON);
        glVertex2f(0.5+posX,4.0+posY);
        glVertex2f(0.0+posX,5.0+posY);
        glVertex2f(-0.5+posX,4.0+posY);
        glVertex2f(-0.5+posX,-4.0+posY);
        glVertex2f(0.0+posX,-5.0+posY);
        glVertex2f(0.5+posX,-4.0+posY);
    glEnd();
    // simbol plus

    // simbol x
    glBegin(GL_POLYGON);
        glVertex2f(-2.0+posX,2.5+posY);
        glVertex2f(-2.5+posX,2.5+posY);
        glVertex2f(-2.5+posX,2.0+posY);
        glVertex2f(2.0+posX,-2.5+posY);
        glVertex2f(2.5+posX,-2.5+posY);
        glVertex2f(2.5+posX,-2.0+posY);
    glEnd();
    glBegin(GL_POLYGON);
        glVertex2f(2.0+posX,2.5+posY);
        glVertex2f(2.5+posX,2.5+posY);
        glVertex2f(2.5+posX,2.0+posY);
        glVertex2f(-2.0+posX,-2.5+posY);
        glVertex2f(-2.5+posX,-2.5+posY);
        glVertex2f(-2.5+posX,-2.0+posY);
    glEnd();
    //simbol x
    //objek utama
glFlush();
}
void respon(){
    if(x2up+posX >= t & x2down+posY >= t){
        c=0.0;
        PlaySound("D:\\Laser.wav",NULL, SND_FILENAME);
        int i = 0;
        down1 -= 4.0;
        down2 -= 4.2;
        down3 -= 4.4;
        down4 -= 4.6;
        down5 -= 4.8;
        down6 -= 5.0;
        down7 -= 5.2;
        down8 -= 5.4;
//        for(i=1;i<=-26.0;--i){
//            rdy-=0.1;
//            display();
//        }
        display();
    }
}
void react(unsigned char key, int x, int y){
    if(key == 'w' || key == 'W'){
        posY +=0.2;
        posY +=kecepatan;
        display();
    }
    else if(key == 'x' || key == 'X'){
        posY -=0.2;
        posY -= kecepatan;
        display();
    }else if(key == 'd' || key == 'D'){
        posX+=0.2;
        posX+= kecepatan;
        display();
    }else if(key == 'a' || key == 'A'){
        posX -= 0.2;
        posX -= kecepatan;
        display();
    }else if(key == 'q' || key == 'Q'){
        posX-=0.2;
        posY+=0.2;
        posX-=kecepatan;
        posY+=kecepatan;
        display();
    }else if(key == 'e' || key == 'E'){
        posX+=0.2;
        posY+=0.2;
        posX+=kecepatan;
        posY+=kecepatan;
        display();
    }else if(key == 'z' || key == 'Z'){
        posX-=0.2;
        posY-=0.2;
        posX-=kecepatan;
        posY-=kecepatan;
        display();
    }else if(key == 'c' || key == 'C'){
        posX+=0.2;
        posY-=0.2;
        posX+=kecepatan;
        posY-=kecepatan;
        display();
    }else{
        cout<<"salah pencet"<<endl;
    }
    respon();
}
void arah(int key, int x, int y){
    if(key == GLUT_KEY_UP){ //untuk mengubah kecepatan
        nilai_awal *= kelipatan;
        kecepatan = nilai_awal;
        display();
        cout <<"Nilai Kecepatan :"<<kecepatan<<endl;
    }else if(key == GLUT_KEY_DOWN){ //untuk mengubah kecepatan
        nilai_awal /= kelipatan;
        kecepatan = nilai_awal;
        display();
        cout <<"Nilai Kecepatan :"<<kecepatan<<endl;
    }else if(key == GLUT_KEY_LEFT){//untuk mengubah warna
        color1 += 0.1;
        color3 -= 0.1;
        display();
    }else if(key == GLUT_KEY_RIGHT){//untuk mengubah warna
        color3 += 0.1;
        color1 -= 0.1;
        display();
    }else {
        cout <<"salah pencet"<<endl;
    }
}
void myinit(){
    glMatrixMode(GL_PROJECTION);
    glLoadIdentity();
    gluOrtho2D(-25.0,25.0,-25.0,25.0);
    glMatrixMode(GL_MODELVIEW);
    glClearColor(0.5,0.5,1.0,1.0);
    glColor3f (0.0, 1.0, 0.0);
}
int main(int argc, char* argv[]){
    glutInit(&argc,argv);
    glutInitDisplayMode(GLUT_SINGLE | GLUT_RGB);
    glutInitWindowSize(700,700);
    //glutInitWindowPosition(100,100);
    glutCreateWindow("Tugas Animasi");
    glutDisplayFunc(display);
    glutKeyboardFunc(react);
    glutSpecialFunc(arah);
    //respon();
    myinit();
    glutMainLoop();
    return 0;
}
